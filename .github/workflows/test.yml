name: Test

on:
  push:
    branches:
      - "**"
      - "!v**"
  pull_request:

jobs:
  build:
    name: Build
    permissions:
      contents: write
      packages: write
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set artifact path
        id: set-path
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            echo "ARTIFACT_PATH=./bin/linux/msdf-atlas-gen" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            echo "ARTIFACT_PATH=./bin/darwin/msdf-atlas-gen" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            echo "ARTIFACT_PATH=./bin/win32/msdf-atlas-gen.exe" >> $GITHUB_OUTPUT
          fi

      - name: Add msbuild to PATH
        if: contains(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v2

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: "3.23.x"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Configure
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg
        run: cmake -S msdf-atlas-gen -B build -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=build/bin -DMSDF_ATLAS_USE_SKIA=OFF

      - name: Build
        run: cmake --build build --config Release --parallel 4 --target msdf-atlas-gen-standalone

      - name: Rename
        run: node rename.js

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: msdf-atlas-gen-${{ matrix.os }}
          path: ${{ steps.set-path.outputs.ARTIFACT_PATH }}
          if-no-files-found: error
          retention-days: 1

  deploy:
    name: Deploy
    permissions:
      contents: write
      packages: write
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./

      - name: Verify
        run: find . -type f
